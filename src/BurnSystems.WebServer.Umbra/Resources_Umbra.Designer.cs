//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.269
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BurnSystems.WebServer.Umbra {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources_Umbra {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources_Umbra() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("BurnSystems.WebServer.Umbra.Resources_Umbra", typeof(Resources_Umbra).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die html
        ///{
        ///	width: 100%;
        ///	height: 100%;
        ///	padding: 0px;
        ///	margin: 0px;
        ///}
        ///
        ///body
        ///{
        ///	width: 100%;
        ///	height: 100%;
        ///	overflow: hidden;
        ///	padding: 0px;
        ///	margin: 0px;
        ///}
        ///
        ///.fullwidth
        ///{
        ///	width: 100%;
        ///}
        ///
        ///.fullheight
        ///{
        ///}
        ///
        ///.umbra_buttons
        ///{
        ///
        ///	top: 0px;
        ///	height: 128px;
        ///	border: 1px solid black;
        ///}
        ///
        ///.umbra_top
        ///{
        ///	top: 130px;
        ///	height: 100px;
        ///}
        ///
        ///.umbra_left
        ///{
        ///	width: 200px;
        ///	position: absolute;
        ///	height: 100%;
        ///}
        ///
        ///.umbra_right
        ///{
        ///	width: 200px;
        ///	margin-right: 0px;
        ///	position: absolute;
        /// [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string css_umbra {
            get {
                return ResourceManager.GetString("css_umbra", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;!DOCTYPE HTML&gt;
        ///&lt;html&gt;
        ///  &lt;head&gt;
        ///    &lt;title&gt;BurnSystems - Umbra&lt;/title&gt;
        ///    &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;css/umbra.css&quot;&gt;&lt;/link&gt;
        ///    &lt;script src=&quot;scripts/jquery.js&quot;&gt;&lt;/script&gt;
        ///    &lt;script data-main=&quot;scripts/init.js&quot; src=&quot;scripts/require.js&quot;&gt;&lt;/script&gt;
        ///  &lt;/head&gt;
        ///  &lt;body&gt;
        ///
        ///  &lt;/body&gt;
        ///&lt;/html&gt; ähnelt.
        /// </summary>
        internal static string index {
            get {
                return ResourceManager.GetString("index", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 
        ///requirejs.config(
        ///{
        ///    //By default load any module IDs from js/lib
        ///    baseUrl: &apos;scripts&apos;,
        ///});
        ///
        ///requirejs([&apos;umbra&apos;], 
        ///	function(umbra)
        ///	{
        ///		var workSpace = new umbra.WorkSpace();
        ///		workSpace.updateLayout();
        ///		workSpace.create($(&quot;body&quot;));
        ///
        ///		var topView = new umbra.View(&quot;Top 1&quot;, &quot;top1&quot;, &quot;This is conteeeent&quot;);
        ///		var topView2 = new umbra.View(&quot;Top 2&quot;, &quot;top2&quot;, &quot;This is &lt;b&gt;MORE&lt;/b&gt; conteeeent&quot;);
        ///		workSpace.areaRight.addView(topView);
        ///		workSpace.areaRight.addView(topView2);
        ///				
        ///		var cont [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string js_init {
            get {
                return ResourceManager.GetString("js_init", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &quot;use strict&quot;;
        ///
        ///define([&quot;umbra&quot;], function(u)
        ///{
        ///	u.umbra.addViewType(
        ///		new u.ViewType(
        ///			&quot;BurnSystems.WebServer.Umbra.Requests.VersionUmbraRequest&quot;,
        ///			function(data)
        ///			{
        ///				data.viewPoint.domContent.find(&quot;.closing&quot;).click(function() 
        ///				{
        ///					data.workSpace.loadContent(&quot;data/Version&quot;, &quot;centered&quot;, 
        ///						{
        ///							success: function(newArea, newView)
        ///							{
        ///								newArea.focusView(newView);
        ///							}
        ///						});
        ///				});
        ///			}));
        ///
        ///	return true;
        ///}); ähnelt.
        /// </summary>
        internal static string js_test {
            get {
                return ResourceManager.GetString("js_test", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &quot;use strict&quot;;
        ///
        ///define(function()
        ///{	
        ///	///////////////////////////////////////////
        ///	// Definition of ViewType-Class 
        ///	var ViewTypeClass = function(token, initFunction)
        ///	{
        ///		this.token = token;
        ///		this.init = initFunction;
        ///	};
        ///
        ///	ViewTypeClass.prototype = 
        ///	{
        ///	};
        ///
        ///	///////////////////////////////////////////
        ///	// Definition of View-Class 
        ///	var ViewClass = function(title, token, content)
        ///	{	
        ///		if (title === undefined)
        ///		{
        ///			title = &quot;Unnamed&quot;;
        ///		}
        ///
        ///		if (content === undefined)
        ///		{
        ///			con [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string js_umbra {
            get {
                return ResourceManager.GetString("js_umbra", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &quot;use strict&quot;;
        ///
        ///define([&quot;umbra&quot;], function(u)
        ///{
        ///	var consoleClass = function()
        ///	{
        ///	};
        ///
        ///	consoleClass.prototype = 
        ///	{
        ///	};
        ///
        ///	u.umbra.addViewType(
        ///		new u.ViewType(
        ///			&quot;BurnSystems.WebServer.Umbra.Requests.ConsoleUmbraRequest&quot;, 
        ///			function(data)
        ///			{
        ///				alert(console);
        ///			}));
        ///
        ///	// Returns the console
        ///	var consoleInstance = new consoleClass();
        ///	u.addPlugin(&quot;Umbra.Console&quot;, consoleInstance);
        ///
        ///	var result = 
        ///	{
        ///		console = consoleInstance
        ///	};
        ///
        ///	return result;
        ///};
        /// ähnelt.
        /// </summary>
        internal static string js_umbra_console {
            get {
                return ResourceManager.GetString("js_umbra_console", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;h1&gt;Umbra Version&lt;/h1&gt;
        ///&lt;a href=&quot;#&quot; class=&quot;closing&quot;&gt;Clone View&lt;/a&gt;
        ///&lt;p&gt;Date: @DateTime.Now&lt;/p&gt;
        ///&lt;p&gt;Current Version of Umbra: @Model.Version&lt;/p&gt;
        ///&lt;h2&gt;Environment&lt;/h2&gt;
        ///&lt;table&gt;
        ///	&lt;tr&gt;
        ///		&lt;td&gt;OS-Version:&lt;/td&gt;
        ///		&lt;td&gt;@Model.OsVersion&lt;/td&gt;
        ///	&lt;/tr&gt;
        ///	&lt;tr&gt;
        ///		&lt;td&gt;.Net-Version:&lt;/td&gt;
        ///		&lt;td&gt;@Model.DotNetVersion&lt;/td&gt;
        ///	&lt;/tr&gt;
        ///	&lt;tr&gt;
        ///		&lt;td&gt;CPU Count:&lt;/td&gt;
        ///		&lt;td&gt;@Model.CpuCount&lt;/td&gt;
        ///	&lt;/tr&gt;
        ///	&lt;tr&gt;
        ///		&lt;td&gt;CPU Bits:&lt;/td&gt;
        ///		&lt;td&gt;@Model.CpuBit&lt;/td&gt;
        ///	&lt;/tr&gt;
        ///	&lt;tr&gt;
        ///		&lt;td&gt;Total Memory:&lt;/td&gt;
        ///		&lt;td&gt;@Model.MemoryTotal&lt;/td&gt;
        ///	 [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string umbra_version {
            get {
                return ResourceManager.GetString("umbra_version", resourceCulture);
            }
        }
    }
}
