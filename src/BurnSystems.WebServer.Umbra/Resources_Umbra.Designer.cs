//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.18010
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BurnSystems.WebServer.Umbra {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources_Umbra {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources_Umbra() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("BurnSystems.WebServer.Umbra.Resources_Umbra", typeof(Resources_Umbra).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die html {
        ///    width: 100%;
        ///    height: 100%;
        ///    padding: 0px;
        ///    margin: 0px;
        ///}
        ///
        ///body {
        ///    width: 100%;
        ///    height: 100%;
        ///    overflow: hidden;
        ///    padding: 0px;
        ///    margin: 0px;
        ///}
        ///
        ///.fullwidth {
        ///    width: 100%;
        ///}
        ///
        ///.fullheight {
        ///}
        ///
        ///.umbra_buttons {
        ///    top: 0px;
        ///    height: 128px;
        ///    border: 1px solid black;
        ///}
        ///
        ///.umbra_top {
        ///    top: 130px;
        ///    height: 100px;
        ///}
        ///
        ///.umbra_left {
        ///    width: 200px;
        ///    position: absolute;
        ///    height: 100%;
        ///}
        ///
        ///.umbra_right {
        ///    width: 200p [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string css_umbra {
            get {
                return ResourceManager.GetString("css_umbra", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;!DOCTYPE HTML&gt;
        ///&lt;html&gt;
        ///  &lt;head&gt;
        ///    &lt;title&gt;BurnSystems - Umbra&lt;/title&gt;
        ///    &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;css/umbra.css&quot;&gt;&lt;/link&gt;
        ///    &lt;script src=&quot;js/lib/jquery.js&quot;&gt;&lt;/script&gt;
        ///    &lt;script data-main=&quot;js/lib/init.js&quot; src=&quot;js/lib/require.js&quot;&gt;&lt;/script&gt;
        ///  &lt;/head&gt;
        ///  &lt;body&gt;
        ///  &lt;/body&gt;
        ///&lt;/html&gt; ähnelt.
        /// </summary>
        internal static string index {
            get {
                return ResourceManager.GetString("index", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 
        ///requirejs.config(
        ///{
        ///    //By default load any module IDs from js/lib
        ///    baseUrl: &apos;js/lib&apos;,
        ///});
        ///
        ///requirejs([&apos;umbra&apos;],
        ///	function (umbra) {
        ///	    var workSpace = new umbra.WorkSpace();
        ///	    workSpace.updateLayout();
        ///	    workSpace.create($(&quot;body&quot;));
        ///
        ///	    var topView = new umbra.View(&quot;Top 1&quot;, &quot;top1&quot;, &quot;This is conteeeent&quot;);
        ///	    var topView2 = new umbra.View(&quot;Top 2&quot;, &quot;top2&quot;, &quot;This is &lt;b&gt;MORE&lt;/b&gt; conteeeent&quot;);
        ///	    workSpace.areaRight.addView(topView);
        ///	    workSpace.areaRight.addView(topView2); [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string js_init {
            get {
                return ResourceManager.GetString("js_init", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &quot;use strict&quot;;
        ///
        ///define([&quot;umbra&quot;], function (u) {
        ///    u.umbra.addViewType(
        ///		new u.ViewType(
        ///			&quot;BurnSystems.WebServer.Umbra.Requests.VersionUmbraRequest&quot;,
        ///			function (data) {
        ///			    data.viewPoint.domContent.find(&quot;.closing&quot;).click(function () {
        ///			        data.workSpace.loadContent(&quot;framework/Version&quot;, &quot;centered&quot;,
        ///						{
        ///						    success: function (newArea, newView) {
        ///						        var myConsole = u.umbra.getPlugin(&quot;Umbra.Console&quot;);
        ///						        myConsole.log(&quot;Version&quot;, &quot;New version retrieved [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string js_test {
            get {
                return ResourceManager.GetString("js_test", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &quot;use strict&quot;;
        ///
        ///define([
        ///    &quot;umbra.workspace&quot;,      // 1
        ///    &quot;umbra.view&quot;,           // 2
        ///    &quot;umbra.viewpoint&quot;,      // 3
        ///    &quot;umbra.area&quot;,           // 4
        ///    &quot;umbra.viewtype&quot;,       // 5
        ///    &quot;umbra.ribbonbar&quot;,      // 6
        ///    &quot;umbra.ribbonbutton&quot;,   // 7
        ///    &quot;umbra.ribbonelement&quot;,  // 8
        ///    &quot;umbra.ribbongroup&quot;,    // 9
        ///    &quot;umbra.ribbontab&quot;,      // 10
        ///    &quot;umbra.eventbus&quot;,       // 11
        ///    &quot;umbra.instance&quot;,       // 12
        ///    &quot;dateformat&quot;],
        ///    function (
        ///        umbraWorkspaceClass,        // [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string js_umbra {
            get {
                return ResourceManager.GetString("js_umbra", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &quot;use strict&quot;;
        ///
        ///define([&quot;umbra.viewpoint&quot;], function (ViewPointClass) {
        ///
        ///    ///////////////////////////////////////////
        ///    // Definition of Area class	
        ///    // @name Name of the DOM element where area has been created
        ///    // @token Name of the Area within the workspace
        ///    var AreaClass = function (domName, token) {
        ///        this.width = 0;
        ///        this.height = 0;
        ///        this.name = domName;
        ///        this.token = token;
        ///
        ///        // Stores the list of views
        ///        this.viewPoints = [];
        ///      [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string js_umbra_area {
            get {
                return ResourceManager.GetString("js_umbra_area", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &quot;use strict&quot;;
        ///
        ///define([&quot;umbra&quot;], function (u) {
        ///    ///
        ///    /// Defines one entry for console
        ///    var consoleEntryClass = function (category, message, importance) {
        ///        this.date = new Date();
        ///        this.category = category
        ///        this.message = message;
        ///        this.importance = importance;
        ///    };
        ///
        ///    ///
        ///    /// Defines the console
        ///    var consoleClass = function () {
        ///        /// Stores the reference to the domElement where console is located
        ///        this.domContent = {};
        ///         [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string js_umbra_console {
            get {
                return ResourceManager.GetString("js_umbra_console", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &quot;use strict&quot;;
        ///
        ///define([&quot;umbra.ribbontab&quot;], function (RibbonTabClass) {
        ///
        ///    ///////////////////////////////////////////
        ///    // Definition of Dragbar class	
        ///    var DragBarClass = function (direction, domElement, dragEvent) {
        ///        this.isHorizontal = direction === &quot;h&quot;;
        ///        this.isVertical = direction === &quot;v&quot;;
        ///        this.domElement = domElement;
        ///        this.dragEvent = dragEvent;
        ///
        ///        this.lastX = 0;
        ///        this.lastY = 0;
        ///        this.isMouseDown = false;
        ///
        ///        var _this = t [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string js_umbra_dragbar {
            get {
                return ResourceManager.GetString("js_umbra_dragbar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &quot;use strict&quot;;
        ///
        ///define([], function () {
        ///
        ///    ///////////////////////////////////////////
        ///    // Definition of EventBus class	
        ///    var EventBusClass = function () {
        ///    };
        ///
        ///    EventBusClass.prototype =
        ///    {
        ///    };
        ///
        ///    return EventBusClass;
        ///}); ähnelt.
        /// </summary>
        internal static string js_umbra_eventbus {
            get {
                return ResourceManager.GetString("js_umbra_eventbus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &quot;use strict&quot;;
        ///
        ///define([], function (umbraInstance) {
        ///
        ///    ///////////////////////////////////////////
        ///    // Umbra Class
        ///    var UmbraType = function () {
        ///        this.viewTypes = [];
        ///        this.plugins = {};
        ///    };
        ///
        ///    UmbraType.prototype =
        ///    {
        ///        addViewType: function (viewType) {
        ///            this.viewTypes.push(viewType);
        ///        },
        ///
        ///        findViewType: function (token) {
        ///            for (var i = 0; i &lt; this.viewTypes.length; i++) {
        ///                if (this.viewTypes[i].tok [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string js_umbra_instance {
            get {
                return ResourceManager.GetString("js_umbra_instance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &quot;use strict&quot;;
        ///
        ///define([&quot;umbra.ribbontab&quot;], function (RibbonTabClass) {
        ///
        ///    ///////////////////////////////////////////
        ///    // Definition of Ribbonbar class	
        ///    var RibbonBarClass = function () {
        ///        this.height = 128;
        ///        this.tabs = [];
        ///        this.domElement = {};
        ///    };
        ///
        ///    RibbonBarClass.prototype =
        ///    {
        ///        /// Inits the RibbonBar Class
        ///        init: function (domElement) {
        ///            this.domElement = domElement;
        ///            this.domElement.html(&apos;&lt;div class=&quot;tabs&quot;&gt;&lt;/ [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string js_umbra_ribbonbar {
            get {
                return ResourceManager.GetString("js_umbra_ribbonbar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &quot;use strict&quot;;
        ///
        ///define([&quot;umbra.ribbonelement&quot;], function (RibbonElementClass) {
        ///
        ///    ///////////////////////////////////////////
        ///    // Definition of RibbonButton class	
        ///    var RibbonButtonClass = function (title, click) {
        ///
        ///        RibbonElementClass.apply(this, arguments);
        ///
        ///        this.title = title;
        ///        this.click = click;
        ///
        ///        // Create dom element
        ///        this.domElement = $(&apos;&lt;div class=&quot;button element&quot;&gt;&lt;a&gt;&apos; + title + &apos;&lt;/a&gt;&lt;/div&gt;&apos;);
        ///        this.domElement.click(this.click);
        ///    [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string js_umbra_ribbonbutton {
            get {
                return ResourceManager.GetString("js_umbra_ribbonbutton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &quot;use strict&quot;;
        ///
        ///define([], function () {
        ///
        ///    ///////////////////////////////////////////
        ///    // Definition of RibbonElement class	
        ///    var RibbonElementClass = function () {
        ///        this.domElement = {};
        ///    };
        ///
        ///    RibbonElementClass.prototype =
        ///    {
        ///    };
        ///
        ///    return RibbonElementClass;
        ///}); ähnelt.
        /// </summary>
        internal static string js_umbra_ribbonelement {
            get {
                return ResourceManager.GetString("js_umbra_ribbonelement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &quot;use strict&quot;;
        ///
        ///define([], function () {
        ///
        ///    ///////////////////////////////////////////
        ///    // Definition of RibbonGroup class	
        ///    var RibbonGroupClass = function (title) {
        ///        this.title = title;
        ///        this.elements = [];
        ///        this.domContent = {};
        ///    };
        ///
        ///    RibbonGroupClass.prototype =
        ///    {
        ///        addElement: function (element) {
        ///            this.elements.push(element);
        ///
        ///            this.domContent.append(element.domElement);
        ///        }
        ///    };
        ///
        ///
        ///    return RibbonGroupCl [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string js_umbra_ribbongroup {
            get {
                return ResourceManager.GetString("js_umbra_ribbongroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &quot;use strict&quot;;
        ///
        ///define([&quot;umbra.ribbongroup&quot;], function (RibbonGroupClass) {
        ///
        ///    ///////////////////////////////////////////
        ///    // Definition of RibbonGroup class	
        ///    var RibbonTabClass = function (title) {
        ///        this.title = title;
        ///        this.groups = [];
        ///
        ///        // Stores the dom element
        ///        this.domTab = {};
        ///        this.domContent = {};
        ///    };
        ///
        ///    RibbonTabClass.prototype =
        ///    {
        ///        addGroup: function (title) {
        ///            var group = new RibbonGroupClass(title);
        ///      [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string js_umbra_ribbontab {
            get {
                return ResourceManager.GetString("js_umbra_ribbontab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &quot;use strict&quot;;
        ///
        ///define([], function () {
        ///
        ///    ///////////////////////////////////////////
        ///    // Definition of View-Class 
        ///    var ViewClass = function (title, token, content) {
        ///        if (title === undefined) {
        ///            title = &quot;Unnamed&quot;;
        ///        }
        ///
        ///        if (content === undefined) {
        ///            content = &quot;No content&quot;;
        ///        }
        ///
        ///        this.title = title;
        ///        this.token = token;
        ///        this.content = content;
        ///
        ///        ViewClass.viewCounter++;
        ///        this.name = &quot;view_&quot; + Vi [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string js_umbra_view {
            get {
                return ResourceManager.GetString("js_umbra_view", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &quot;use strict&quot;;
        ///
        ///define([], function () {
        ///
        ///    ///////////////////////////////////////////
        ///    // Definition of ViewPoint-Class 
        ///    var ViewPointClass = function (view, domRegisterTab) {
        ///        this.view = view;
        ///        this.domRegisterTab = domRegisterTab;
        ///        this.domContent = {};
        ///    };
        ///
        ///    ViewPointClass.prototype =
        ///	{
        ///	    getView: function () {
        ///	        return this.view;
        ///	    }
        ///	};
        ///
        ///    ViewPointClass.lastDomId = 1;
        ///
        ///    return ViewPointClass;
        ///}); ähnelt.
        /// </summary>
        internal static string js_umbra_viewpoint {
            get {
                return ResourceManager.GetString("js_umbra_viewpoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &quot;use strict&quot;;
        ///
        ///define([], function () {
        ///
        ///    ///////////////////////////////////////////
        ///    // Definition of ViewType-Class 
        ///    var ViewTypeClass = function (token, initFunction) {
        ///        this.token = token;
        ///        this.init = initFunction;
        ///    };
        ///
        ///    ViewTypeClass.prototype =
        ///    {
        ///    };
        ///
        ///
        ///    return ViewTypeClass;
        ///}); ähnelt.
        /// </summary>
        internal static string js_umbra_viewtype {
            get {
                return ResourceManager.GetString("js_umbra_viewtype", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &quot;use strict&quot;;
        ///
        ///define([
        ///    &quot;umbra.ribbonbar&quot;,      // 1
        ///    &quot;umbra.area&quot;,           // 2
        ///    &quot;umbra.dragbar&quot;,        // 3
        ///    &quot;umbra.view&quot;,           // 4
        ///    &quot;umbra.instance&quot;,       // 5
        ///    &quot;dateformat&quot;],          // 6
        ///    function (
        ///        RibbonBarClass,     // 1
        ///        AreaClass,          // 2
        ///        DragBarClass,       // 3
        ///        ViewClass,          // 4
        ///        umbraInstance       // 5
        ///        ) {
        ///
        ///    ///////////////////////////////////////////
        ///    // Definition of WorkSpace  [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string js_umbra_workspace {
            get {
                return ResourceManager.GetString("js_umbra_workspace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;h1&gt;Umbra Version&lt;/h1&gt;
        ///&lt;a href=&quot;#&quot; class=&quot;closing&quot;&gt;Clone View&lt;/a&gt;
        ///&lt;p&gt;Date: @DateTime.Now&lt;/p&gt;
        ///&lt;p&gt;Current Version of Umbra: @Model.Version&lt;/p&gt;
        ///&lt;h2&gt;Environment&lt;/h2&gt;
        ///&lt;table&gt;
        ///	&lt;tr&gt;
        ///		&lt;td&gt;OS-Version:&lt;/td&gt;
        ///		&lt;td&gt;@Model.OsVersion&lt;/td&gt;
        ///	&lt;/tr&gt;
        ///	&lt;tr&gt;
        ///		&lt;td&gt;.Net-Version:&lt;/td&gt;
        ///		&lt;td&gt;@Model.DotNetVersion&lt;/td&gt;
        ///	&lt;/tr&gt;
        ///	&lt;tr&gt;
        ///		&lt;td&gt;CPU Count:&lt;/td&gt;
        ///		&lt;td&gt;@Model.CpuCount&lt;/td&gt;
        ///	&lt;/tr&gt;
        ///	&lt;tr&gt;
        ///		&lt;td&gt;CPU Bits:&lt;/td&gt;
        ///		&lt;td&gt;@Model.CpuBit&lt;/td&gt;
        ///	&lt;/tr&gt;
        ///	&lt;tr&gt;
        ///		&lt;td&gt;Total Memory:&lt;/td&gt;
        ///		&lt;td&gt;@Model.MemoryTotal&lt;/td&gt;
        ///	 [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string umbra_version {
            get {
                return ResourceManager.GetString("umbra_version", resourceCulture);
            }
        }
    }
}
